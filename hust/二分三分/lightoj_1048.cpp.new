/*
  二分答案 简单题  好WA点

  输出方案WA了，没考虑到“一定要分成K组”!!!  好WA点
*/
#include <algorithm>
#include <stdio.h>
using namespace std;
#define MAXN 1005
int a[MAXN];
int n, K;
bool check(int x)
{
  int tot = 0, k = 1;
  for(int i = 0; i <= n; i++) {
    tot += a[i];
    if(tot > x) {
      tot = a[i], k++;
      if(k > K) return false;
    }
  }
  return true;
}
void output(int x)
{
  int tot = 0, k = 1;
  for(int i = 0; i <= n; i++) {
    tot += a[i];
    if(tot > x) {
        printf("%d\n", tot - a[i]);
        tot = a[i], k++;
    }
    if(n - i == K - k) { printf("%d\n", tot); break; }
  }
  for(int i = n - (K - k) + 1; i <= n; i++) printf("%d\n", a[i]);
}
int main()
{
  int Cas = 0, cases;
  scanf("%d", &cases);
  while(cases--) {
    scanf("%d%d", &n, &K); K++; int l = 0, r = 0;
    for(int i = 0; i <= n; i++) scanf("%d", &a[i]), r += a[i], l = max(l, a[i]);
    int mid, ans = 0;
    while(l <= r) {
      mid = (l + r) >> 1;
      if(check(mid)) r = mid - 1, ans = mid;
      else l = mid + 1;
    }
    printf("Case %d: %d\n", ++Cas, ans);
    output(ans);
  }
  return 0;
}
