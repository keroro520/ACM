/*
  算N!有多少个0

  算N的阶层有多少个0..............啊啊啊啊么心情写题解

  直接摘：就看这n个数中有多少个5的倍数，因为1-n中肯定有足够多的偶数能将5的倍数转换为10的倍
  数，所以有多少个5的倍数阶层就有多少个0。
  循环：因为如果像25*4，50*2,都能产生2个0，所以我们要找出25的倍数，因为前面已经找出了除以
  了5，后面在除以5就是25的倍数了，并且因为前面已经25,50已经因为是5的倍数算过一次，后面在
  算的时候直接加25的倍数的个数就ok了
*/
#include <stdio.h>
typedef long long ll;
int Q;
int zeros(ll x)
{
  return x == 0 ? 0 : x/5 + zeros(x/5);
}
int main()
{
  int cases, Cas = 0;
  scanf("%d", &cases);
  while(cases--) {
    scanf("%d", &Q);
    ll l = 1, r = (1LL << 30), mid, ans = -1;
    while(l <= r) {
      mid = (l + r) / 2;
      int res = zeros(mid) ;
      if(res == Q) ans = mid, r = mid - 1;
      else if(res < Q) l = mid + 1;
      else r = mid - 1;
    }
    if(ans == -1) printf("Case %d: impossible\n", ++Cas);
    else printf("Case %d: %lld\n", ++Cas, ans);
  }
  return 0;
}
